/*
 * sieve.cpp
 *
 *  Created on: Jan 29, 2017
 *      Author: danielcalderon
 */
#include<iostream>
#include<cstdlib>
#include<cmath>
using namespace std;
void grow(int*& L,int count);
int* sieve(int n);
int main()
{
	int n;
	int* final;
	static int count = 0;
	cout << "Please enter the number to get all its primes" << endl;
	cin >> n;
	final = sieve(n);
	for(int i = 0 ; i< count;i++)
		cout <<final[i] << " ";
	return EXIT_SUCCESS;
}
int* sieve(int n)
{
	int A[n];
	int*L ;
	int j = 0;
	for(int p = 2; p < n;p++)
		A[p] = p;
	for(int p = 2; p < floor(sqrt(n));p++)
	{
		if(A[p] != 0)
			j = p*p;
			while(j<=n)
			{
				A[j] = 0;
				j = j+p;
			}
	}
	int i = 0;

	for(int p = 2; p < n;p++)
	{
		if(A[p] != 0)
		{
			count++;
			grow(L,count);
			L[i] = p;
			i +=1;
		}
	}
	return L;
}
void grow(int*& L,int n)
{
	int *n = new int[n+1];
	copy(L,L+n-1,n);
	if(n>1)
		delete[]L;
	L = n;
}


