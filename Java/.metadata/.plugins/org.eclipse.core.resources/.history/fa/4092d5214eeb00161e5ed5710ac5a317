
public class ATM {
	//Class to hold user information
	public class PATRON{
		private String patronName;
		private int pinNumber;
		double patronFunds;
		//Constructor
		PATRON()
		{
			patronName = "Apple";
			pinNumber = 0;
			patronFunds = 0;
		}
		PATRON(String name, int pin, double funds)
		{
			patronName = name;
			pinNumber = pin;
			patronFunds = funds;
		}
		public void setPatronInfo(String name, int pin, double funds)
		{
			patronName = name;
			pinNumber = pin;
			patronFunds = funds;
		}
		//Getters
		public String getName()
		{
			return patronName;
		}
		public int getPin()
		{
			return pinNumber;
		}
		public double getFunds()
		{
			return patronFunds;
		}
		//Setters
		public void addFunds(double amount)
		{
			patronFunds += amount;
		}
		public void deductFunds(double amount)
		{
			patronFunds -= amount;
		}
		@Override
		public String toString(){
			return patronName;
		}
	}
	
	public PATRON[] users = new PATRON[10];
	private double bankBalance;
	private String bankLocation;
	private String bankName;
	private int serialNumber;
	//Constructor
	ATM()
	{
		bankBalance = 100.00;
		serialNumber = 0;
		bankLocation = "UNKNOWN";
		bankName = "UNKNOWN";
		users[0].setPatronInfo("Alice", 2, 3);
	}
	//Overloaded Constructors
	ATM(int serialNum,String name, String location)
	{
		bankBalance = 100.00;
		serialNumber = serialNum;
		bankName = name;
		bankLocation = location;
	}
	ATM(String name)
	{
		bankBalance = 100.00;
		bankName = name;
		bankLocation = "UNKNOWN";
		serialNumber = 0;

	}
	//Getters
	double getBankBalance()
	{
		return bankBalance;
	}
	String getBankLocation()
	{
		return bankLocation;
	}
	String getBankName()
	{
		return bankName;
	}
	//Methods
	void setATM(int serialNum,String location)
	{
		serialNumber = serialNum;
		bankLocation = location;
		
	}
	void addFund(int amount)
	{
		bankBalance += amount;
	}
	void displayMenu()
	{
		System.out.println("===== ATM Transaction Menu =====");
		System.out.println("1. Withdrawl");
		System.out.println("2. Deposit");
		System.out.println("3. Transfer");
	}
	void withdrawal(String name,int pin, double amount)
	{
		
		System.out.println(users[0]);
	}
	//Overloaded Output
	@Override
	public String toString()
	{
		return "Serial Number: " + serialNumber+"\n"+"Bank Name: " + bankName +"\n"+
				"Location: " + bankLocation + "\n" + "Balance: " + bankBalance + "\n";
	}
	public static void main(String[] args) {
		ATM machine1 = new ATM("OtterUnion");
		ATM machine2 = new ATM(200,"BOA","Library");
		System.out.println("===== Welcome to CSUMB ATM Machine =====");
		System.out.println(machine1);
		System.out.println(machine1);
        System.out.println("");
        System.out.println(machine2);
        System.out.println("\n===== Equality Checking =====");
        System.out.println(machine1.equals(machine2));
        System.out.println("");
        machine1.setATM(100, "BIT110");
        machine1.addFund(400);
        System.out.println(machine1);
        System.out.println("");
        machine1.displayMenu();
        machine1.withdrawal("Alice", 7777, 10); 
        machine1.withdrawal("NoAlice", 1234, 10);
        machine1.withdrawal("Alice", 1234, 10000);
        machine1.withdrawal("Alice", 1234, 10);
        machine1.withdrawal("Alice", 1234, 2000);
        System.out.println("\n===== Machine Status =====");
        //machine1.status();
	}
	
}
